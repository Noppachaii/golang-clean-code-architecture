basePath: /
definitions:
  enities.Monitor:
    properties:
      name:
        type: string
      version:
        type: string
    type: object
  entityuser.UserEntity:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      updated_at:
        type: string
    type: object
  entityuser.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  entityuser.UserLoginResponse:
    properties:
      token:
        $ref: '#/definitions/entityuser.UserTokenEntity'
      user:
        $ref: '#/definitions/entityuser.UserEntity'
    type: object
  entityuser.UserRefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  entityuser.UserRegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
  entityuser.UserTokenEntity:
    properties:
      access:
        type: string
      refresh:
        type: string
    type: object
  gofiberentities.ErrorResponseType:
    properties:
      message:
        type: string
      trace_id:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: sukhum_butrkam@hotmail.com
    name: Sukhum Butrkam
  description: This is a sample swagger for Training Kawaii Shop
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Training Kawaii Shop API
  version: "1.0"
paths:
  /api/v1/:
    get:
      consumes:
      - '*/*'
      description: get the Name and Version of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/enities.Monitor'
      summary: Show the Name and Version of server.
      tags:
      - Monitor
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: User Login
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entityuser.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entityuser.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gofiberentities.ErrorResponseType'
      summary: User Login
      tags:
      - User
  /api/v1/logout:
    post:
      consumes:
      - application/json
      description: User Logout
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entityuser.UserRefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gofiberentities.ErrorResponseType'
      summary: User Logout
      tags:
      - User
  /api/v1/profile:
    get:
      consumes:
      - application/json
      description: Get User Profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entityuser.UserEntity'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gofiberentities.ErrorResponseType'
      summary: Get User Profile
      tags:
      - User
  /api/v1/refresh-token:
    post:
      consumes:
      - application/json
      description: Refresh User Token
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entityuser.UserRefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entityuser.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gofiberentities.ErrorResponseType'
      summary: Refresh User Token
      tags:
      - User
  /api/v1/register:
    post:
      consumes:
      - application/json
      description: Register User
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entityuser.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entityuser.UserEntity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gofiberentities.ErrorResponseType'
      summary: Register User
      tags:
      - User
swagger: "2.0"
